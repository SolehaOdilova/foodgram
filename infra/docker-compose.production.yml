version: "3.9"

volumes:
  pg_data:
  static_volume:
  media_volume:
  backend_static_volume:

services:
  db:
    image: postgres:13
    container_name: db
    env_file: 
      - ../.env 
    ports:
      - "5432:5432" 

    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend
    container_name: backend
    env_file: 
      - ../.env
    volumes:
      - backend_static_volume:/app/static 
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "9000"

  frontend:
    build: ../frontend
    container_name: frontend
    command: sh -c "cp -r /app/build/* /static/ && tail -f /dev/null"
    volumes:
      - static_volume:/static
    depends_on:
      - backend

  gateway:
    build: .
    container_name: gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/static
      - media_volume:/app/media
      - backend_static_volume:/app/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro  
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot