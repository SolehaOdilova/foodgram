services:
  db:
    image: postgres:13
    container_name: foodgram-db
    env_file: ../.env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: ../backend
    container_name: foodgram-backend
    env_file: ../.env
    volumes:
      - static_volume:/usr/share/nginx/html
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - db
    expose:
      - "9000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:9000"

  frontend:
    build:
      context: ../frontend
    container_name: foodgram-frontend
    command: cp -r /app/build/. /usr/share/nginx/html/
    volumes:
      - static_volume:/usr/share/nginx/html
    depends_on:
      - backend

  nginx:
    image: nginx:1.25.4-alpine
    container_name: foodgram-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/share/nginx/html
      - media_volume:/usr/share/nginx/html/media
      - ../docs:/usr/share/nginx/html/api/docs
    depends_on:
      - backend
      - frontend

volumes:
  pg_data:
  static_volume:
  media_volume: